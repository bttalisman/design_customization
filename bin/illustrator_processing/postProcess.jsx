#include "~/design_customization/app/assets/javascripts/json2.jsx"// This script is run after a DesignTemplate is created.  It should// do whatever needs to be done to the AI file in order to make version// creation run smoothly.  The original purpose was to fix the paths of// placed items so that the AI file can load without warnings.var basePath = activeDocument.path;var docName = activeDocument.name;docName = docName.slice( 0, -3 ); // trim the last three characters// Load the file containing prompts datavar dataFileName = basePath + "/" + docName + "_prompts.jsn";// Currently prompts data are not being used.  We might want to use these// prompts to determine how to post-process.var read_file = File( dataFileName );read_file.open( 'r', undefined, undefined );var s = read_file.read();read_file.close();var data = JSON.parse( s );var image_settings = data.image_settings;if(documents.length > 0){  var placedItems = activeDocument.placedItems;  if(placedItems.length > 0)  {    for (var i = 0 ; i < placedItems.length; i++)    {      var item = placedItems[i];      try      {        var itemName = item.name;        // Fix all placed items.  All linked files will not be present on the        // computer running this app.  Fixing these links should cause the AI        // file to load without warnings, when users are creating versions.        var bFix = true;  // We could maybe be more selective about which placed                          // items to fix.        if( bFix ) {          // Set the path of the item to the location of file known to exist.          // This is so the AI file will load without warnings.          item.file = new File( '~/design_customization/app/assets/images/fixer.png' );        }      }      catch( e )      {//        alert( 'Failed!!!!' );//        alert( 'i: ' + i );//        alert( 'item: ' + item );      }    } // each placed item  } // if there are placed items// Save the modified AI filemodAIFileName = basePath + '/' + docName;//alert( 'modAIFileName: ' + modAIFileName );saveInFile = new File( modAIFileName );activeDocument.saveAs( saveInFile );activeDocument.close();} // if there are documents
