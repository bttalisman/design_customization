
#include "~/design_customization/app/assets/javascripts/json2.jsx"function hexToRgb(hex) {  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);  return result ? {      r: parseInt(result[1], 16),      g: parseInt(result[2], 16),      b: parseInt(result[3], 16)  } : null;}function getPNGOptions(){  var pngExportOpts = new ExportOptionsPNG24();  pngExportOpts.antiAliasing = true;  pngExportOpts.artBoardClipping = true;  //pngExportOpts.horizontalScale = 100.0;  //pngExportOpts.matte = true;  //pngExportOpts.matteColor = 0, 0, 0;  pngExportOpts.saveAsHTML = false;  pngExportOpts.transparency = true;  //pngExportOpts.verticalScale = 100.0;  return pngExportOpts;}var basePath = activeDocument.path;var docName = activeDocument.name;docName = docName.slice( 0, -3 ); // trim the last three charactersif(documents.length > 0){  var gradients = activeDocument.gradients;  var gradCount = gradients.length;  for( var gradIndex = 0; gradIndex < gradCount; gradIndex++ )  {    var gradient = gradients[ gradIndex ];    var stops = gradiend.gradientStops;    for( var stopIndex = 0; stopIndex < stops.length; stops++ )    {      var stop = stops[ stopIndex ];      var color = stop.color;      c = color.cyan;      m = color.magenta;      y = color.yellow;      k = color.black;    }  }  var pageItems = activeDocument.pageItems;  var pageItemCount = pageItems.length;  alert( 'pageItemCount: ' + pageItemCount );  for( var itemIndex = 0; itemIndex < pageItemCount; itemIndex++ )  {    var item = pageItems[ itemIndex ];    try    {      var itemName = item.name;      var myItem = false;      if( itemName == 'bob' ) {        myItem = true; }      if( false )      {        aColor = new RGBColor();        aColor.red = 155;        aColor.green = 155;        aColor.blue = 155;        item.fillColor = aColor;      }      var color = item.fillColor;      if( color )      {        var colorType = color.typename;        if( colorType === 'GradientColor' )        {          var grad = color.gradient;          var stops = grad.gradientStops;          var gradStopsCount = stops.length;          for( var stopIndex = 0; stopIndex < gradStopsCount; stopIndex++ )          {            var stop = stops[ stopIndex ];            var stopColor = stop.color;            newColor = new RGBColor();            var n = stopIndex / gradStopsCount;            n = n * 255;            newColor.red = n;            newColor.green = n;            newColor.blue = n;            stop.color = newColor;          }        }        c = color.cyan;        m = color.magenta;        y = color.yellow;        k = color.black;  //        alert( 'c: ' + c + ', y: ' + y + ', m: ' + m + ', k: ' + k );      }    }    catch( e )    {    }  }} // if there are documents
