#include "/Users/bent/customization/app/assets/javascripts/json2.jsx"var basePath = activeDocument.path;var docName = activeDocument.name;docName = docName.slice( 0, -3 ); // trim the last three characters// Load the file containing prompts mapped to replacement text.var dataFileName = basePath + "/" + docName + "_data.jsn";alert( 'dataFileName: ' + dataFileName );var read_file = File( dataFileName );read_file.open( 'r', undefined, undefined );var s = read_file.read();read_file.close();var data;data = JSON.parse( s );alert( 's: ' + s );if(documents.length > 0){   var textRefs = activeDocument.textFrames;   if(textRefs.length > 0)   {      for (var i = 0 ; i < textRefs.length; i++)      {            var textLines = textRefs[i].lines;            if( textLines.length > 0 )            {                    for( var x = 0; x < textLines.length; x++ )                    {                        var l = textLines[ x ];                        if( l.contents.indexOf( "<%" ) > -1 )                        {                            var key = l.contents;                            var replaceText;                            key = key.replace( "<%", "" );                            key = key.replace( "%>", "" );                            replaceText = data[ key ];                            l.contents = replaceText;                        }                     } // each line            } // if there are lines      } // each text frame   } // if there are frames   // Export to JPG   var jpgFileName = basePath + "/output/" + docName + "_mod.jpg";   saveInFile = new File( jpgFileName );   var options = new ExportOptionsJPEG();   options.antiAliasing = true;   options.artBoardClipping = true;   var guideLayer = app.activeDocument.layers.getByName("Design Guides");   guideLayer.visible = false;   activeDocument.exportFile( saveInFile, ExportType.JPEG, options );   // Save the modified AI file   modAIFileName = basePath + "/output/" + docName + "_mod.ai";   saveInFile = new File( modAIFileName );   activeDocument.saveAs( saveInFile );   activeDocument.close();} // if there are documents