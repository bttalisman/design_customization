#include "/Users/bent/customization/app/assets/javascripts/json2.jsx"function hexToRgb(hex) {    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);    return result ? {        r: parseInt(result[1], 16),        g: parseInt(result[2], 16),        b: parseInt(result[3], 16)    } : null;}var basePath = activeDocument.path;var docName = activeDocument.name;docName = docName.slice( 0, -3 ); // trim the last three characters// Load the file containing prompts mapped to replacement text.var dataFileName = basePath + "/" + docName + "_data.jsn";var charStyle, charAttr, aColor, tempName;var read_file = File( dataFileName );read_file.open( 'r', undefined, undefined );var s = read_file.read();read_file.close();var data;data = JSON.parse( s );var allImageSettings = data[ 'image_settings' ];if(documents.length > 0){  var placedItems = activeDocument.placedItems;   if(placedItems.length > 0)   {      for (var i = 0 ; i < placedItems.length; i++)      {            var item = placedItems[i];            var itemName = item.name            var itemSettings = allImageSettings[ itemName ];            if( itemSettings != null )            {              var newPath = itemSettings[ 'replacement_path' ];              if( newPath != '' )              {                var f = new File( newPath );                item.file = f;              }            }      } // each placed item   } // if there are placed items   // Export to JPG   var jpgFileName = basePath + "/output/mod_" + docName + ".jpg";   saveInFile = new File( jpgFileName );   var options = new ExportOptionsJPEG();   options.antiAliasing = true;   options.artBoardClipping = true;   var guideLayer = app.activeDocument.layers.getByName("Design Guides");   if( guideLayer != null )   {      guideLayer.visible = false;   }   activeDocument.exportFile( saveInFile, ExportType.JPEG, options );   // Save the modified AI file   modAIFileName = basePath + "/output/" + docName + "_mod.ai";   saveInFile = new File( modAIFileName );   activeDocument.saveAs( saveInFile );   activeDocument.close();} // if there are documents