<!-- This partial generates the html prompting the user for specifics on how versions
of this template will ask about each color extracted from the original file.  For example,
should this color be replaced? -->

<%
if !@colors.nil?

  #logger.info '_design_template_colors.erb - @prompts: ' + @prompts.to_s
  #logger.info '_design_template_colors.erb - @images: ' + @images.to_s

%>
  <div class='panel panel-success'>
    <div class='panel-heading'><h3 class='panel-title'>Select Colors to Replace</h3></div>
    <div class='panel-body'>

<%
      i = 0
      @colors.each { |color|
#        logger.info '_design_template_colors.erb - color: ' + color.to_s

        color_key = get_prompts_key_for_color( color )
        color_hex = get_hex_string_for_color( color )
        color_name = color[ 'name' ]

        if !@prompts.nil? && (color != '') && !color.nil? && !color_name.nil?
          colorProps = @prompts[ PROMPTS_KEY_COLOR_SETTINGS ][ color_key.to_s ]
          if !colorProps.nil?
            # we've got color props, these settings have been previously set
            replaceColor = colorProps[ PROMPTS_KEY_REPLACE_COLOR ]
            if( replaceColor == 'checked' )
              cssString = 'border-color:blue;'
            else
              cssString = 'border-color:white;'
            end
          end # colorProps not nil
        end # @prompts not nil %>

        <input type='hidden' name='color_key<%= i.to_s %>' value='<%= color_key.to_s %>'></input>
        <input type='hidden' name='color_name<%= i.to_s %>' value='<%= color_name.to_s %>'></input>
        <input type='hidden' name='orig_color_hex<%= i.to_s %>' value='<%= color_hex.to_s %>'></input>

        <input type='hidden' name='orig_color_c<%= i.to_s %>' value='<%= color['c'].to_s %>'></input>
        <input type='hidden' name='orig_color_m<%= i.to_s %>' value='<%= color['m'].to_s %>'></input>
        <input type='hidden' name='orig_color_y<%= i.to_s %>' value='<%= color['y'].to_s %>'></input>
        <input type='hidden' name='orig_color_k<%= i.to_s %>' value='<%= color['k'].to_s %>'></input>


        <div style='width:120px; display:inline-block; margin:10px 10px 20px 10px;'>

          <div onclick='click_color(this);' data-selected='<%= replaceColor.to_s %>'
            data-input-id='replace_color<%= i.to_s %>' class='bordered-item'
            style='<%= cssString.to_s %> padding:10px; width:120px; height=140px;'>
            <div style='width:100%; height:40px; font-size:12px;'><%= color_name.to_s %></div>
            <div style='display:inline-block; vertical-align:top; width:40px;
              height:40px; background:<%= color_hex.to_s %>'></div>
            <div class='cmyk-details' style='vertical-align:top; width:40px; margin-left:5px; display:inline-block;'>
              C: <%= color['c'].to_s[0..4] %><br>M: <%= color['m'].to_s[0..4] %><br>
              Y: <%= color['y'].to_s[0..4] %><br>K: <%= color['k'].to_s[0..4] %>
            </div>
            <input style='display:none;' value='<%= replaceColor.to_s %>'
              name='replace_color<%= i.to_s %>' id='replace_color<%= i.to_s %>' >
            </input>
          </div>

        </div>
<%
        i += 1
      } # each color
%>
      </div>
    </div>
  <input type='hidden' name='color_count' value='<%= i.to_s %>'></input>
<%
end #colors is not nil
%>


<script>

  function validate_color_values()
  {
    // not really anything to do here.
    return true;
  }

  function click_color( e )
  {
    var element = $(e);
    var selected = element.attr( 'data-selected' );
    var inputId;
    var input;

    if( selected !== '' )
    {
      element.css( 'border-color', 'white' );
      element.attr( 'data-selected', 'false' );
      inputId = element.attr( 'data-input-id' );
      input = $( '#' + inputId );
      input.val( '' );
    }
    else
    {
      element.css( 'border-color', 'blue' );
      element.attr( 'data-selected', 'true' );
      inputId = element.attr( 'data-input-id' );
      input = $( '#' + inputId );
      input.val( 'checked' );
    }


  }

</script>
