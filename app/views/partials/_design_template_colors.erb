<!-- This partial generates the html prompting the user for specifics on how versions
of this template will ask about each color extracted from the original file.  For example,
should this color be replaced? -->

<%
if !@colors.nil?

  #logger.info '_design_template_colors.erb - @prompts: ' + @prompts.to_s
  #logger.info '_design_template_colors.erb - @images: ' + @images.to_s

%>
  <div class='panel panel-success'>
    <div class='panel-heading'><h3 class='panel-title'>Select Colors to Replace</h3></div>
    <div class='panel-body'>

<%
      i = 0
      @colors.each { |color|
#        logger.info '_design_template_colors.erb - color: ' + color.to_s

        color_key = get_prompts_key_for_color( color )
        color_hex = get_hex_string_for_color( color )
        color_name = color[ 'name' ]

        if i%2 === 0
          alt_class = 'alt'
        else
          alt_class = ''
        end

        use_palette = ''
        use_palette_select = ''
        palette_id = ''
        select_pal = ''
        offer_pal_enabled = ''
        border_css = 'border-color: black;'
        use_palette_select = 'disabled="disabled"'


        if !@prompts.nil? && (color != '') && !color.nil?
          color_props = @prompts[ PROMPTS_KEY_COLOR_SETTINGS ][ color_key.to_s ]

          if !color_props.nil?
            # we've got color props, these settings have been previously set
            replace_color = color_props[ PROMPTS_KEY_REPLACE_COLOR ]
            use_palette = color_props[ PROMPTS_KEY_REPLACE_COLOR_USE_PALETTE ]
            palette_id = color_props[ PROMPTS_KEY_REPLACE_COLOR_PALETTE_ID ]

            if( replace_color == 'checked' )
              # this color has previously been selected for replacement.
              border_css = 'border-color:blue;'
              label_class = ''
              use_pal_cb_class = ''
              use_pal_cb_prop = ''
            else
              # this color has not been selected for replacement.
              border_css = 'border-color: black;'
              label_class = 'disabled'
              use_pal_cb_class = 'disabled'
              use_pal_cb_prop = 'disabled="disabled"'
            end

            if( use_palette != 'checked' )
              # if this color does not use a palette, then the select is disabled
              use_palette_select = 'disabled="disabled"'
            else
              use_palette_select = ''
            end

          end # colorProps not nil
        end # @prompts not nil %>

        <input type='hidden' name='color_key<%= i.to_s %>' value='<%= color_key.to_s %>'></input>
        <input type='hidden' name='color_name<%= i.to_s %>' value='<%= color_name.to_s %>'></input>
        <input type='hidden' name='orig_color_hex<%= i.to_s %>' value='<%= color_hex.to_s %>'></input>

        <input type='hidden' name='orig_color_c<%= i.to_s %>' value='<%= color['c'].to_s %>'></input>
        <input type='hidden' name='orig_color_m<%= i.to_s %>' value='<%= color['m'].to_s %>'></input>
        <input type='hidden' name='orig_color_y<%= i.to_s %>' value='<%= color['y'].to_s %>'></input>
        <input type='hidden' name='orig_color_k<%= i.to_s %>' value='<%= color['k'].to_s %>'></input>

        <input style='display:none;' value='<%= replace_color.to_s %>'
          name='replace_color<%= i.to_s %>' id='replace_color<%= i.to_s %>' >
        </input>

        <div class='color-selector-panel <%= alt_class.to_s %>'>

          <div onclick='click_color(this);' data-selected='<%= replace_color.to_s %>'
            data-input-id='replace_color<%= i.to_s %>' data-label-id='op_label<%= i.to_s %>'
            data-cb-id='use_pal<%= i.to_s %>' data-sel-id='select_pal<%= i.to_s %>'
            style='float:left; <%= border_css.to_s %> border-style:solid; border-width:2px; padding:10px; width:140px; height:140px;'>

            <div style='width:100%; height:40px; font-weight:bold; font-size:12px;'><%= color_name.to_s %></div>

            <div class='color-selector-swatch' style='background:<%= color_hex.to_s %>'></div>

            <div class='cmyk-details' style='vertical-align:top; width:35px; margin-bottom:15px;
              margin-left:15px; display:inline-block;'>
              C: <%= color['c'].to_s[0..4] %><br>M: <%= color['m'].to_s[0..4] %><br>
              Y: <%= color['y'].to_s[0..4] %><br>K: <%= color['k'].to_s[0..4] %>
            </div>

          </div>

          <div style='width:150px;'>
            <label class='<%= label_class.to_s %>' id='op_label<%= i.to_s %>' style=''>Offer a Palette?
              <input type='checkbox' class='<%= use_pal_cb_class.to_s %>' data-sel-id='select_pal<%= i.to_s %>'
                onchange='toggle_use_palette( event );' class='checkbox-input'
                value='checked' name='use_pal<%= i.to_s %>'
                id='use_pal<%= i.to_s %>' <%= use_pal_cb_prop.to_s %>
                <%= use_palette %> ></input>
            </label>
          </div>
          <select <%= use_palette_select.to_s %> name='select_pal<%= i.to_s %>'
            id='select_pal<%= i.to_s %>' class='form-control' style='width:130px;'
            aria-describedby='basic-addon4'>
            <option value='' disabled selected>Select a Palette</option>
<%          @palettes.each { |p|
              if p.id.to_s == palette_id
                selected = true
              else
                selected = false
              end %>
              <option <%= if selected then 'selected="selected"' end %>
                value='<%= p.id.to_s %>'><%= p.name %></option>
<%          } %>
          </select>
        </div>
<%
        i += 1
      } # each color
%>
      </div>
    </div>
  <input type='hidden' name='color_count' value='<%= i.to_s %>'></input>
<%
end #colors is not nil
%>


<script>

  function validate_color_values()
  {
    // not really anything to do here.
    return true;
  }

  function click_color( e )
  {
    var element = $(e);
    var bg_color = element.css( 'background-color' );
    var selected = element.attr( 'data-selected' );
    var inputId = element.attr( 'data-input-id' );
    var input = $( '#' + inputId );
    var label_id = element.attr( 'data-label-id' );
    var label = $( '#' + label_id );
    var cb_id = element.attr( 'data-cb-id' );
    var cb = $( '#' + cb_id );
    var sel_id = element.attr( 'data-sel-id' );
    var select = $( '#' + sel_id );


    if( selected !== '' )
    {
      // this color is already selected, make it NOT selected
      element.css( 'border-color', bg_color );
      element.attr( 'data-selected', '' );
      input.val( '' );
      label.addClass( 'disabled' );
      cb.addClass( 'disabled' );
      cb.prop( 'disabled', true );
      select.addClass( 'disabled' );
      select.prop( 'disabled', true );
    }
    else
    {
      // this color is not selected, make it selected
      element.css( 'border-color', 'blue' );
      element.attr( 'data-selected', 'checked' );
      input.val( 'checked' );
      label.removeClass( 'disabled' );
      cb.removeClass( 'disabled' );
      cb.prop( 'disabled', false );

      if( cb.is( ':checked' ) ) {
          select.removeClass( 'disabled' );
          select.prop( 'disabled', false );
      }

    }

  }


  function toggle_use_palette( event )
  {
    var target = $(event.target);
    var sel_id = target.attr( 'data-sel-id' );
    var select = $( '#' + sel_id );

    select.prop( 'disabled', !target.is(':checked') );

    if( !target.is(':checked') ) {
      select.val( '' );
    }
  }




</script>
