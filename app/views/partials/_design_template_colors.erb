<!-- This partial generates the html prompting the user for specifics on how versions
of this template will ask about each color extracted from the original file.  For example,
should this color be replaced? -->

<%
if !@colors.nil?

  #logger.info '_design_template_colors.erb - @prompts: ' + @prompts.to_s
  #logger.info '_design_template_colors.erb - @images: ' + @images.to_s

%>
  <div class='panel panel-success'>
    <div class='panel-heading'><h3 class='panel-title'>Select Colors to Replace</h3></div>
    <div class='panel-body'>

<%
      i = 0
      @colors.each { |color|
#        logger.info '_design_template_colors.erb - color: ' + color.to_s

        color_key = get_prompts_key_for_color( color )
        color_hex = get_hex_string_for_color( color )
        color_name = color[ 'name' ]

        if i%2 === 0
          background_color = '#fafafa'
        else
          background_color = '#ffffff'
        end

        use_palette = ''
        use_palette_select = ''
        palette_id = ''
        select_pal = ''
        offer_pal_enabled = ''
        border_css = 'border-color:' + background_color.to_s + ';'
        use_palette_select = 'disabled="disabled"'


        if !@prompts.nil? && (color != '') && !color.nil? && !color_name.nil?
          color_props = @prompts[ PROMPTS_KEY_COLOR_SETTINGS ][ color_key.to_s ]
          if !color_props.nil?
            # we've got color props, these settings have been previously set
            replace_color = color_props[ PROMPTS_KEY_REPLACE_COLOR ]
            use_palette = color_props[ PROMPTS_KEY_REPLACE_COLOR_USE_PALETTE ]
            palette_id = color_props[ PROMPTS_KEY_REPLACE_COLOR_PALETTE_ID ]

            if( replace_color == 'checked' )
              border_css = 'border-color:blue;'
            else
              border_css = 'border-color:' + background_color.to_s + ';'
            end

            if( use_palette != 'checked' )
              use_palette_select = 'disabled="disabled"'
            else
              use_palette_select = ''
            end


          end # colorProps not nil
        end # @prompts not nil %>

        <input type='hidden' name='color_key<%= i.to_s %>' value='<%= color_key.to_s %>'></input>
        <input type='hidden' name='color_name<%= i.to_s %>' value='<%= color_name.to_s %>'></input>
        <input type='hidden' name='orig_color_hex<%= i.to_s %>' value='<%= color_hex.to_s %>'></input>

        <input type='hidden' name='orig_color_c<%= i.to_s %>' value='<%= color['c'].to_s %>'></input>
        <input type='hidden' name='orig_color_m<%= i.to_s %>' value='<%= color['m'].to_s %>'></input>
        <input type='hidden' name='orig_color_y<%= i.to_s %>' value='<%= color['y'].to_s %>'></input>
        <input type='hidden' name='orig_color_k<%= i.to_s %>' value='<%= color['k'].to_s %>'></input>

        <input style='display:none;' value='<%= replace_color.to_s %>'
          name='replace_color<%= i.to_s %>' id='replace_color<%= i.to_s %>' >
        </input>

        <div style='width:170px; padding:15px; background:<%= background_color.to_s %>; display:inline-block;'>

          <div onclick='click_color(this);' data-selected='<%= replace_color.to_s %>'
            data-input-id='replace_color<%= i.to_s %>'
            style='float:left; <%= border_css.to_s %> border-style:solid; border-width:2px; padding:10px; width:140px; height:140px;'>

            <div style='width:100%; height:40px; font-size:12px;'><%= color_name.to_s %></div>

            <div style='display:inline-block; vertical-align:top; width:40px;
              height:40px; background:<%= color_hex.to_s %>'></div>

            <div class='cmyk-details' style='vertical-align:top; width:35px; margin-bottom:15px;
              margin-left:15px; display:inline-block;'>
              C: <%= color['c'].to_s[0..4] %><br>M: <%= color['m'].to_s[0..4] %><br>
              Y: <%= color['y'].to_s[0..4] %><br>K: <%= color['k'].to_s[0..4] %>
            </div>

          </div>

          <div style='width:150px;'>
            <label class='' id='op_label<%= i.to_s %>' style=''>Offer a Palette?
              <input type='checkbox' data-sel-id='select_pal<%= i.to_s %>'
                onchange='toggle_use_palette( event );' class='checkbox-input'
                value='checked' name='use_pal<%= i.to_s %>' id='use_pal<%= i.to_s %>'
                <%= use_palette %> ></input>
            </label>
          </div>
          <select <%= use_palette_select.to_s %> name='select_pal<%= i.to_s %>'
            id='select_pal<%= i.to_s %>' class='form-control' style='width:130px;'
            aria-describedby='basic-addon4'>
            <option value='' disabled selected>Select a Palette</option>
<%          @palettes.each { |p|
              if p.id.to_s == palette_id
                selected = true
              else
                selected = false
              end %>
              <option <%= if selected then 'selected="selected"' end %>
                value='<%= p.id.to_s %>'><%= p.name %></option>
<%          } %>
          </select>
        </div>
<%
        i += 1
      } # each color
%>
      </div>
    </div>
  <input type='hidden' name='color_count' value='<%= i.to_s %>'></input>
<%
end #colors is not nil
%>


<script>

  function validate_color_values()
  {
    // not really anything to do here.
    return true;
  }

  function click_color( e )
  {
    var element = $(e);
    var bg_color = element.css( 'background-color' );
    var selected = element.attr( 'data-selected' );
    var inputId;
    var input;

    if( selected !== '' )
    {
      element.css( 'border-color', bg_color );
      element.attr( 'data-selected', '' );
      inputId = element.attr( 'data-input-id' );
      input = $( '#' + inputId );
      input.val( '' );
    }
    else
    {
      element.css( 'border-color', 'blue' );
      element.attr( 'data-selected', 'checked' );
      inputId = element.attr( 'data-input-id' );
      input = $( '#' + inputId );
      input.val( 'checked' );
    }

  }


  function toggle_use_palette( event )
  {
    var target = $(event.target);
    var sel_id = target.attr( 'data-sel-id' );
    var select = $( '#' + sel_id );

    select.prop( 'disabled', !target.is(':checked') );

    if( !target.is(':checked') ) {
      o.val( '' );
    }
  }

    function toggle( event )
    {
      var target = $(event.target);
      var use_pal_id = target.attr( 'data-use-pal-id' );
      var sel_pal_id = target.attr( 'data-sel-id' );
      var label_id = target.attr( 'data-label-id' );

      var s, o;
      s = '#' + use_pal_id;
      o = $(s);
      o.prop( 'disabled', !target.is(':checked') );

      if( !target.is(':checked') ) {
        //  if pick color checkbox is unchecked

        // uncheck the use palette checkbox
        o.prop( 'checked', false );

        // disable the label
        s = '#' + label_id;
        o = $(s);
        o.addClass( 'disabled' );

        // set the value and disable the select
        s = '#' + sel_pal_id;
        o = $(s);
        o.val( '' );
        o.prop( 'disabled', true );
      }
      else
      {
        s = '#' + label_id;
        o = $(s);
        o.removeClass( 'disabled' );
      }
    }









</script>
