<!-- This partial generates the html prompting the user for specifics on how images
should be dealt with for a version.  This file must coordinate with the _design_template_images partial.
For example, the design template images partial asks, should this image be replaced? and the version
images partial says, ok, this image is getting replaced, what should I replace it with? -->

<%
logger.info '_VERSION_IMAGES.html.erb - @image_values: ' + @image_values.to_s
logger.info '_VERSION_IMAGES.html.erb - @image_settings: ' + @image_settings.to_s
logger.info '_VERSION_IMAGES.html.erb - @version: ' + @version.to_s

i = 0

@image_settings.each { |image|

  logger.info '_VERSION_IMAGES.html.erb - image: ' + image.to_s

  image_settings = image[ 1 ]

  if( image_settings['replace_image'] == '' ) then
    # this image shouldn't be replaced
    next
  end

  image_name = image[ 0 ]

  logger.info '_VERSION_IMAGES.html.erb - image_name: ' + image_name.to_s

  replacement_path = ''
  raplacement_name = ''
  replacement_image_id = ''
  collage_query = ''
  collage_checked = ''
  ri_checked = ''
  ri_display = 'display:none;'
  collage_display = 'display:none;'
  is_collage = false

  if @version
    replacement_path = get_local_image_path( image_name, @version )
    replacement_name = get_uploaded_file_name( image_name, @version )
    replacement_image_id = get_replacement_image_id( image_name, @version )
    collage = get_collage( image_name, @version )
    collage_query = collage.query if !collage.nil?
    is_collage = associated_with_collage?( image_name, @version )
    collage_checked = 'checked' if is_collage
    collage_display = '' if is_collage
    ri_checked = 'checked' if !is_collage
    ri_display = '' if !is_collage
  end

%>
  <div class='panel panel-success'>
    <div class='panel-heading'><h3 class='panel-title'><%= image_name %> - Upload an Image</h3></div>
    <div class='panel-body'>

      <div class='btn-group' data-upload-gp-id='upload-gp<%= i.to_s %>' data-inst-gp-id='inst-gp<%= i.to_s %>'>
        <label class="btn">
          <input type='radio' onchange='changeType( event );' name='type<%= i.to_s %>' <%= ri_checked %> value='upload'></input>
            <span>Upload</span>
        </label>
        <label class="btn">
          <input type='radio' onchange='changeType( event );' name='type<%= i.to_s %>' <%= collage_checked %> value='instagram'></input>
          <span>Instagram</span>
        </label>
      </div>

      <div class='spacer'></div>

      <div class='input-group' style='<%= ri_display %>' id='upload-gp<%= i.to_s %>'>
        <span class='input-group-btn' id='basic-addon2'>
          <span  class='btn btn-default fileinput-button' id='file_input_container'>
            <span>Upload</span>
            <input type='file' data-input-id='replacement_path<%= i.to_s %>' name='replacement_image<%= i.to_s %>[uploaded_file]' id='replacement_image_uploaded_file<%= i.to_s %>' onchange='fileInputChange( this );' >
          </span>
        </span>
        <input type='text' disabled class='form-control' value='<%= replacement_name %>' id='replacement_path<%= i.to_s %>' data-image-name='<%= image_name %>'></input>
      </div>

      <div class='input-group' style='<%= collage_display %>' id='inst-gp<%= i.to_s %>'>
        <span class='input-group-addon' id='basic-addon1'>Instagram User</span>
        <input type='text' class='form-control' id='collage_query<%= i.to_s %>' value='<%= collage_query %>' name='collage_query<%= i.to_s %>'></input>
      </div>

      <div class='spacer'></div>

      <input style='display:none;' id='version_id<%= i.to_s %>' name='version_id<%= i.to_s %>' value='<%= @version_id %>'></input>
      <input style='display:none;' id='image_name<%= i.to_s %>' name='image_name<%= i.to_s %>' value='<%= image_name %>'></input>
      <input style='display:none;' id='replacement_image_id<%= i.to_s %>' name='replacement_image_id<%= i.to_s %>' value='<%= replacement_image_id %>'></input>

    </div>
  </div>
<%
  i += 1
} # each image
%>

<input type='hidden' name='image_count' id='image_count' value='<%= i.to_s %>'></input>

<script>

  function set_visibility( type, upload_id, inst_id )
  {
    var s, o;

    if( type == 'upload' )
    {
      // hide the instagram ui and show the upload ui
      s = '#' + upload_id;
      o = $(s);
      o.show();
      s = '#' + inst_id;
      o = $(s);
      o.hide();
    }
    else
    {
      // hide the upload ui and show the instagram ui
      s = '#' + upload_id;
      o = $(s);
      o.hide();
      s = '#' + inst_id;
      o = $(s);
      o.show();
    }
  }

  function changeType( event )
  {
    var s, o, type;
    var target = $(event.target);
    var name_attr = target.attr( 'name' );
    var parent = target.parent().parent();
    var upload_gp_id = parent.attr( 'data-upload-gp-id' );
    var inst_gp_id = parent.attr( 'data-inst-gp-id' );

    s = 'input:radio[name=' + name_attr + ']:checked';
    o = $(s);

    type = o.val();
    set_visibility( type, upload_gp_id, inst_gp_id );
  }

  function fileInputChange( element )
  {

    var s, e, inputId;
    var filePath = event.target.value;
    filePath = filePath.replace(/.*[\/\\]/, '');

    s = '#' + element.id;
    e = $( s );

    inputId = e.attr( 'data-input-id' );

    s = '#' + inputId;
    e = $( s );

    if( filePath != '' )
    {
      e.val( filePath );
    }
  }


  function validate_image_values()
  {
    var count = $('#image_count').val();
    var s, o;

    for( var i = 0; i < count; i++ )
    {
//    todo, validate stuff smartly
//      s = '#replacement_path' + i;
//      o = $(s);
//      if( o.val() == '' )
//      {
//        alert( 'Please upload a file.' );
//        return false;
//      }
    }

    return true;
  }



  // When a user updates a Version, this method is called to build a json description
  // of all version-specific settings.  This json object is stored as the 'values' property
  function build_image_values()
  {
    var count = $('#image_count').val();
    var s, v, o;
    var rep_path;
    var text_color;

    var oReturn;
    var oImageProps;
    oReturn = {};

    var image_name, replacement_image_id;

    console.log( 'build_image_values() - count: ' + count );

    for( var i = 0; i < count; i++ )
    {
      s = '#image_name' + i;
      o = $(s);
      image_name = o.val();

      s = '#replacement_image_id' + i;
      o = $(s);
      replacement_image_id = o.val();

      oImageProps = {};
      oImageProps.replacement_image_id = replacement_image_id;

      oReturn[ image_name ] = oImageProps;
    }

    return oReturn;
  }

</script>
