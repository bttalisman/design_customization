<h4>Version Images</h4><br>

<%
logger.info '_VERSION_IMAGES.html.erb - @image_values: ' + @image_values.to_s
logger.info '_VERSION_IMAGES.html.erb - @image_settings: ' + @image_settings.to_s
logger.info '_VERSION_IMAGES.html.erb - @version: ' + @version.to_s


i = 0

@image_settings.each { |image|

  logger.info '_VERSION_IMAGES.html.erb - image: ' + image.to_s

  image_settings = image[ 1 ]

  if( image_settings['replace_image'] == '' ) then
    next
  end

  image_name = image[ 0 ]

  logger.info '_VERSION_IMAGES.html.erb - image_name: ' + image_name.to_s

  replacement_path = ''
  raplacement_name = ''

  replacement_image_id = ''

  if( @version ) then
    replacement_path = get_local_image_path( image_name, @version )
    replacement_name = get_uploaded_file_name( image_name, @version )
    replacement_image_id = get_replacement_image_id( image_name, @version )
  end


  form_id = 'imageform' + i.to_s

%>


  <div style='margin-top:30px;'>
    <%= image_name %>
    <input type='text' value='<%= replacement_name %>' id='replacement_path<%= i.to_s %>' data-image-name='<%= image_name %>'></input><br>
  </div>

  <span class="btn btn-default fileinput-button" id='file_input_container'>
    <span>Upload</span>
    <input type="file" data-input-id='replacement_path<%= i.to_s %>' name="replacement_image<%= i.to_s %>[uploaded_file]" id="replacement_image_uploaded_file<%= i.to_s %>" onchange='fileInputChange( this );' >
  </span>

  <input style='display:none;' id='version_id<%= i.to_s %>' name='version_id<%= i.to_s %>' value='<%= @version_id %>'></input>
  <input style='display:none;' id='image_name<%= i.to_s %>' name='image_name<%= i.to_s %>' value='<%= image_name %>'></input>
  <input style='display:none;' id='replacement_image_id<%= i.to_s %>' name='replacement_image_id<%= i.to_s %>' value='<%= replacement_image_id %>'></input>


<%
  i += 1
} # each image
%>

  <input type='hidden' name='image_count' id='image_count' value='<%= i.to_s %>'></input>

  <script>



  function fileInputChange( element )
  {

    var s, e, inputId;
    var filePath = event.target.value;
    filePath = filePath.replace(/.*[\/\\]/, '');

    s = '#' + element.id;
    e = $( s );

    inputId = e.attr( 'data-input-id' );

    s = '#' + inputId;
    e = $( s );

    if( filePath != '' )
    {
      e.val( filePath );

    }
  }



  $(document).ready(function(){
    $("[id^='colorpicker']").colorpicker({});
  });


  function validate_image_values()
  {
    alert( 'validate_image_values()' );

    return true;
  }



  // When a user updates a Version, this method is called to build a json description
  // of all version-specific settings.  This json object is stored as the 'values' property
  function build_image_values()
  {

    var count = $('#image_count').val();
    var s, v, o;
    var rep_path;
    var text_color;

    var oReturn;
    var oImageProps;
    oReturn = {};

    var image_name, replacement_image_id;


    alert( 'build_image_values() - count: ' + count );

    for( var i = 0; i < count; i++ )
    {
          s = '#image_name' + i;
          o = $(s);
          image_name = o.val();

          s = '#replacement_image_id' + i;
          o = $(s);
          replacement_image_id = o.val();

          oImageProps = {};
          oImageProps[ 'replacement_image_id' ] = replacement_image_id;

          oReturn[ image_name ] = oImageProps;
    }

    return oReturn;
  }

</script>
