

<div class='row'>

  <div class='col col-md-1'></div>
  <div class='col col-md-10'>
    <table class='table table-hover'>
      <thead>
        <tr>
          <th><a onclick='toggle_name();'>Template Name</a>
            <span id='name_arrow' class='glyphicon glyphicon-menu-up menu-arrow' aria-hidden='true'></span>
            <%= image_tag( 'blank.png', size: '14x14', class: 'arrow-spacer' ) %>
          </th>
          <th><a onclick='toggle_created();'>Created</a>
            <span id='created_arrow' class='glyphicon glyphicon-menu-up menu-arrow' aria-hidden='true'></span>
            <%= image_tag( 'blank.png', size: '14x14', class: 'arrow-spacer' ) %>
          </th>
          <th><a onclick='toggle_updated();'>Updated</a>
            <span id='updated_arrow' class='glyphicon glyphicon-menu-up menu-arrow' aria-hidden='true'></span>
            <%= image_tag( 'blank.png', size: '14x14', class: 'arrow-spacer' ) %>
          </th>
          <th><a onclick='toggle_tags();'>Tags?</a>
            <span id='tags_arrow' class='glyphicon glyphicon-menu-up menu-arrow' aria-hidden='true'></span>
            <%= image_tag( 'blank.png', size: '14x14', class: 'arrow-spacer' ) %>
          </th>
          <th><a onclick='toggle_images();'>Images?</a>
            <span id='images_arrow' class='glyphicon glyphicon-menu-up menu-arrow' aria-hidden='true'></span>
            <%= image_tag( 'blank.png', size: '14x14', class: 'arrow-spacer' ) %>
          </th>
        </tr>
      </thead>
      <tbody>
    <%
        i = 0
        @design_templates.each { |t| %>
          <tr>
            <td class='clickable' onclick='show_template( "<%= t[:id]%>" );' id='name<%= i.to_s %>'>
              <%= t[:name] %>
            </td>
            <td id='created<%= i.to_s %>'>
              <%= t[:created] %>
            </td>
            <td id='updated<%= i.to_s %>'>
              <%= t[:updated] %>
            </td>
            <td id='tags<%= i.to_s %>'>
              <%= t[:tags] %>
            </td>
            <td id='images<%= i.to_s %>'>
              <%= t[:images] %>
            </td>
          </tr>
    <%    i += 1
        } %>
      </tbody>
    </table>
  </div> <!-- / col -->

  <div class='col col-md-1'>
  </div>

</div> <!-- / row -->

<div style='display:none' id='templates'><%= @design_templates.to_json %></div>


<script>

  var NAME_FLIP = true;
  var TAGS_FLIP = true;
  var IMAGES_FLIP = true;
  var CREATED_FLIP = true;
  var UPDATED_FLIP = true;



  function toggle_arrow( e )
  {
    $( '.menu-arrow' ).hide();
    $( '.arrow-spacer' ).show();  // show all of the arrow spacers
    e.show();
    e.toggleClass( 'glyphicon-menu-up' );
    e.toggleClass( 'glyphicon-menu-down' );
    e.next().hide();  // hide the arrow spacer immediately following the clicked element.
  }


  function show_template( id )
  {
    window.location = '/design_templates/' + id;
  }

  function get_templates()
  {
    var templates_element = $('#templates');
    var templates_text = templates_element.text();
    var templates_array = JSON.parse( templates_text );
    return templates_array;
  }

  function put_templates( array )
  {
    var templates_element = $('#templates');
    templates_element.text( JSON.stringify( array ) );
  }

  function toggle_name()
  {
    var templates = get_templates();
    NAME_FLIP = !NAME_FLIP;

    templates.sort( function( obj1, obj2 )
    {
      return my_sort( obj1, obj2, 'name', NAME_FLIP );
    });

    put_templates( templates );
    toggle_arrow( $('#name_arrow') );
    fill_container();
  }


  function toggle_created()
  {
    var templates = get_templates();
    CREATED_FLIP = !CREATED_FLIP;

    templates.sort( function( obj1, obj2 )
    {
      return my_sort( obj1, obj2, 'created', CREATED_FLIP );
    });

    put_templates( templates );
    toggle_arrow( $('#created_arrow') );
    fill_container();
  }

  function toggle_updated()
  {
    var templates = get_templates();
    UPDATED_FLIP = !UPDATED_FLIP;

    templates.sort( function( obj1, obj2 )
    {
      return my_sort( obj1, obj2, 'updated', UPDATED_FLIP );
    });

    put_templates( templates );
    toggle_arrow( $('#updated_arrow') );
    fill_container();
  }

  function toggle_tags()
  {
    var templates = get_templates();
    TAGS_FLIP = !TAGS_FLIP;

    templates.sort( function( obj1, obj2 )
    {
      return my_sort( obj1, obj2, 'tags', TAGS_FLIP );
    });

    put_templates( templates );
    toggle_arrow( $('#tags_arrow') );
    fill_container();
  }

  function toggle_images()
  {
    var templates = get_templates();
    IMAGES_FLIP = !IMAGES_FLIP;

    templates.sort( function( obj1, obj2 )
    {
      return my_sort( obj1, obj2, 'images', IMAGES_FLIP );
    });

    put_templates( templates );
    toggle_arrow( $('#images_arrow') );
    fill_container();
  }


  function fill_container( )
  {
    var templates = get_templates();
    var o, s, el;
    var d;
    var container_index = 0;


    for( var i = 0; i < templates.length; i++ )
    {
      o = templates[i];

      s = '#name' + container_index.toString();
      el = $(s);
      el.text( o.name );
      el.attr( 'onclick', 'show_template("' + o.id + '")' );

      s = '#tags' + container_index.toString();
      el = $(s);
      el.text( o.tags );

      s = '#created' + container_index.toString();
      el = $(s);
      el.text( o.created );

      s = '#updated' + container_index.toString();
      el = $(s);
      el.text( o.updated );

      s = '#images' + container_index.toString();
      el = $(s);
      el.text( o.images );

      container_index++;
    }
  }


  $(document).ready( function() {
    toggle_name();
  });

</script>
