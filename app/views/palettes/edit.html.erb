<script>

  MY_PALETTE = [];

  function toggle_color( color_id )
  {
    turnOffLoadingIndicator();
    var i = MY_PALETTE.indexOf( color_id );

    if( i == -1 )
    {
      add_color( color_id );
    }
    else
    {
      remove_color( color_id );
    }
    turnOnLoadingIndicator();
  }


  function add_color( color_id )
  {
    // update the server
    var uri = '<%= local_host %>/palettes/<%= @palette.id %>/add?color_id=' + color_id;
    $.get( uri, function(data, status) {});

    var s, my_color, all_color, my_color_offset, all_color_offset, left_dif, top_dif;

    // get the color swatch from the All Colors panel
    s = '#all_color' + color_id;
    all_color = $(s);

    // clone it, make it transparent, and stick it onto the end of the
    // My Colors list.
    my_color = all_color.clone();
    my_color.attr( 'id', 'my_color' + color_id );
    my_color.css( { opacity:0 } );
    var anchor = $( '<a></a>' );
    anchor.attr( 'onclick', 'toggle_color( "' + color_id + '" );' );
    anchor.prepend( my_color );
    $('#my_colors_list').append( anchor );

    var ac_left = all_color.offset().left - 10;  // not sure why we need these
    var ac_top = all_color.offset().top - 10;    // fudge factors
    var left = my_color.offset().left - 10;
    var top = my_color.offset().top - 10;

    // Clone the swatch from All Colors, and place it above the original.
    var clone = all_color.clone();
    $('body').prepend( clone );
    clone.css( {position: 'absolute', top: ac_top, left: ac_left, zIndex: 999} );

    // Dynamically build a keyframe, insert it in the head, and remove it
    // when the animation finishes.
    var kf = $('<style>@keyframes add{ ' +
      '0% {top:' + ac_top + 'px; left:' +
      ac_left + 'px; transform: rotateX(0deg) rotateY(0deg);} ' +
      '50% { height:100px; }' +
      '100% {top:' + top + 'px; left:' + left + 'px; ' +
      'transform: rotateX(360deg) rotateY(360deg); }}</style>');
    kf.appendTo('head');
    clone.bind('oanimationend animationend webkitAnimationEnd', function() {
      $(this).remove();
      my_color.css( { opacity:1 } );
      kf.remove();
    });
    clone.addClass( 'add_swatch' );

    // Turn the yellow border on.
    s = '#border_div' + color_id;
    $(s).css( 'border-color', 'yellow' );

    // Add it to our global array
    MY_PALETTE.push( color_id );
  }


  function remove_color( color_id )
  {
    var s;

    // Update the server
    var uri = '<%= local_host %>/palettes/<%= @palette.id %>/remove?color_id=' + color_id;
    $.get( uri, function(data, status) {});

    // Get the swatch from the My Color panel.
    s = '#my_color' + color_id;
    var my_color = $(s);

    // Clone it, place it over the original, make the original transparent,
    // and make the clone visible.
    var clone = my_color.clone();
    var mc_left = my_color.offset().left - 10;
    var mc_top = my_color.offset().top - 10;
    $('body').prepend( clone );
    my_color.css( {opacity:0} );
    clone.css( { position:'absolute', top: mc_top, left: mc_left, zIndex:999 } );
    clone.bind('oanimationend animationend webkitAnimationEnd', function() {
      $(this).remove();
      my_color.animate( { width: 0, height: 0 }, 200, function() {
        $(this).remove();
      } );
    });
    clone.addClass( 'drop_swatch' );


    // Make the border color on the all_colors swatch white.
    s = '#border_div' + color_id;
    $(s).css( 'border-color', 'black' );

    // Remove the color from MY_PALETTE
    var index = MY_PALETTE.indexOf( color_id );
    if (index > -1) {
        MY_PALETTE.splice(index, 1); }
  }

  function load_colors()
  {
<%  @my_colors.each { |c| %>
      MY_PALETTE.push( '<%= c.id %>' );
<%  } %>
  }


  // This function is called when the user clicks save.  Data from the form
  // is gathered and posted to the palettes controller.
  function update_palette( templateId )
  {
    clear_palettes_cache();
    var form = $('#palette_form');
    form.submit();
  }

  $(document).ready(function(){
    load_colors();
  });

</script>

<div class='row'>

  <div class='col col-md-1'></div>
  <div class='col col-md-4'>
    <div class='panel panel-default'>
      <div class='panel-heading'>
        <h3 class='panel-title'><%= @palette.name %></h3>
      </div>
      <div class='panel-body'>
<%      if !@all_colors.empty? %>
          <div id='my_colors_list'>
<%          @all_colors.each do |c|
              if( @my_colors.include?( c ) )
                id = 'my_color' + c.id.to_s %>
                <a onclick='toggle_color( "<%= c.id %>" );'>
                  <%= swatch( c, { display: display, id: id } ).html_safe %>
                </a>
<%            end %>
<%          end # each color %>
          </div>
<%      end # there are colors %>
      </div> <!-- /panel body -->
    </div> <!-- /panel -->

    <div class='spacer'></div>
    <form action='update' id='palette_form'>
      <input style='display:none;' name='palette[name]' value='<%= @palette.name %>' \>

      <div class='input-group'>
        <span class='input-group-addon' id='basic-addon1'>Name</span>
        <input type='text' value='<%= @palette.name %>' class='form-control'
          id='palette_name' name='palette[name]' aria-describedby='basic-addon1'></input>
      </div>

      <div class='spacer'></div>

      <div class='input-group'>
        <span class='input-group-addon' id='basic-addon2'>Description</span>
        <input type='text' value='<%= @palette.description %>' class='form-control'
          id='palette_description' name='palette[description]' aria-describedby='basic-addon2'></input>
      </div>

      <div class='spacer'></div>
      <a class='btn btn-default' onclick='update_palette( <%= @palette.id %> ); return false;'>Update</a>
      <a class='btn btn-default' href='<%= local_host %>/palettes/<%= @palette.id %>'>Cancel</a>

    </form>
  </div> <!-- /col -->

  <div class='col-md-1'></div>

  <div class='col-md-5'>
    <div class='panel panel-default'>
      <div class='panel-heading'>
        <h3 class='panel-title'>All Colors</h3>
      </div>
      <div class='panel-body'>
<%
        if !@all_colors.empty? %>
          <div id='all_colors_list'>
<%          @all_colors.each do |c|
              color = 'black'
              id = 'all_color' + c.id.to_s
              color = 'yellow' if( @my_colors.include?( c ) ) %>
              <div id='border_div<%= c.id.to_s %>' style='display:inline-block; border-style:solid; border-width:2px; border-color:<%= color %>;'>
                <a onclick='toggle_color( "<%= c.id %>" );'>
                  <%= swatch( c, { id: id } ).html_safe %>
                </a>
              </div>
<%          end # each color %>
          </div>
<%      end # there are colors %>
      </div> <!-- /panel body -->
    </div> <!-- /panel -->
  </div> <!-- /col -->
</div> <!-- /row -->
